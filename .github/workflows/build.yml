
name: Build Electron App

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Clean workspace
        run: |
          if (Test-Path "node_modules") { Remove-Item -Recurse -Force "node_modules" }
          if (Test-Path "dist") { Remove-Item -Recurse -Force "dist" }
          if (Test-Path "dist-electron") { Remove-Item -Recurse -Force "dist-electron" }

      - name: Install dependencies
        run: npm install --force
        env:
          NODE_ENV: development

      - name: Verify terser installation
        run: |
          npm list terser || npm install terser --save-dev
          Write-Host "Terser installed successfully"

      - name: Verify dependencies
        run: |
          npm list --depth=0
          if (!(Test-Path "node_modules")) { 
            Write-Error "node_modules not found after install"
            exit 1
          }

      - name: Build React app
        run: npm run build
        env:
          NODE_ENV: production

      - name: Verify React build
        run: |
          if (!(Test-Path "dist")) {
            Write-Error "React build failed - dist folder not found"
            exit 1
          }
          if (!(Test-Path "dist/index.html")) {
            Write-Error "React build failed - index.html not found"
            exit 1
          }

      - name: Build Electron app
        run: npm run dist
        env:
          NODE_ENV: production

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: billing-buddy-windows
          path: |
            dist-electron/*.exe
            dist-electron/*.msi
            dist-electron/*.zip
        if: always()

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: billing-buddy-windows
          path: ./artifacts
        
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
