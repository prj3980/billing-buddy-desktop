
name: Build Electron App

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: false

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Remove lock files to avoid conflicts
        run: |
          if (Test-Path "package-lock.json") { Remove-Item "package-lock.json" -Force }
          if (Test-Path "bun.lockb") { Remove-Item "bun.lockb" -Force }
          if (Test-Path "yarn.lock") { Remove-Item "yarn.lock" -Force }

      - name: Install dependencies
        run: npm install --legacy-peer-deps --no-audit --no-fund

      - name: Build React app
        run: npm run build
        env:
          NODE_ENV: production

      - name: List dist contents (debug)
        run: |
          if (Test-Path "dist") {
            Get-ChildItem -Recurse dist | Select-Object FullName
          } else {
            Write-Host "dist folder not found"
          }

      - name: Build Electron app (Windows only)
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: production

      - name: List electron build output (debug)
        run: |
          if (Test-Path "dist-electron") {
            Get-ChildItem -Recurse dist-electron | Select-Object FullName
          } else {
            Write-Host "dist-electron folder not found"
          }

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: billing-buddy-windows
          path: |
            dist-electron/*.exe
            dist-electron/*.msi
        continue-on-error: true

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: billing-buddy-windows
          path: ./artifacts
        
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
